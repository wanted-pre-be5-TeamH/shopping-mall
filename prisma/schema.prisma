// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coupon {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  type     String
  discountAmount Int
  isUsed   Boolean
  usedAt   DateTime?
  expireAt DateTime

  userId Int
  user User @relation(fields: [userId], references: [id])

  order Order[]
  @@map("coupons")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderName     String
  userName      String
  status        String
  countryCode   String
  countryName   String
  address       String
  quantities    Int
  price         Int
  deliveryCost Int

  userId   Int
  user User @relation(fields: [userId], references: [id])
  couponId Int
  coupon Coupon @relation(fields: [couponId], references: [id])

  // orderitem OrderItem[]
  @@map("orders")
}

model DeliveryCost {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  countryName String
  quantity    Int
  cost       Int

  @@map("deliverycosts")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String
  name  String

  coupon Coupon[]
  order Order[]

  @@map("users")
}

// model OrderItem {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   productId   Int
//   productName String
//   price       Int

//   orderId Int
//   order Order @relation(fields: [orderId], references: [id])

//   @@map("orderitems")
// }


